{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiro\\\\Desktop\\\\server-demo\\\\client\\\\src\\\\Task.jsx\";\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport Header1 from './Header1';\nimport Header2 from './Header2';\nimport Header3 from './Header3';\nimport Header4 from './Header4';\nimport TaskDescribe from './TaskDescribe';\nimport TaskRemuneration from './TaskRemuneration';\nimport TaskSetting from './TaskSetting';\nimport TaskType from './TaskType';\n\nfunction Task() {\n  const [isPerson, setIsPerson] = useState(true);\n  const [task, setTask] = useState({\n    task_type: '',\n    task_tittle: '',\n    task_description: '',\n    task_suburb: '',\n    task_date: '',\n    remuneration_type: '',\n    remuneration_number: ''\n  });\n\n  const onTypeChange = e => {\n    if (e.target.value === \"person\") {\n      setIsPerson(true);\n      setTask(preValue => {\n        return { ...preValue,\n          task_type: \"person\"\n        };\n      });\n    } else {\n      setIsPerson(false);\n      setTask(preValue => {\n        return { ...preValue,\n          task_type: \"online\"\n        };\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTask(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  };\n\n  const handleClick = () => {\n    fetch('http://localhost:8000/task', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task_type: task.task_type,\n        task_tittle: task.task_tittle,\n        task_description: task.task_description,\n        task_suburb: task.task_suburb,\n        task_date: task.task_date,\n        remuneration_type: task.remuneration_type,\n        remuneration_number: task.remuneration_number\n      })\n    }).then(response => response.json()).then(data => console(data)).catch(err => {\n      console.log(\"Error: \" + err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TaskType, {\n    typeChange: onTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Header2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TaskDescribe, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Header3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TaskSetting, {\n    isTypePerson: isPerson,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Header4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TaskRemuneration, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default Task;","map":{"version":3,"sources":["C:/Users/Shiro/Desktop/server-demo/client/src/Task.jsx"],"names":["React","useState","Button","Header1","Header2","Header3","Header4","TaskDescribe","TaskRemuneration","TaskSetting","TaskType","Task","isPerson","setIsPerson","task","setTask","task_type","task_tittle","task_description","task_suburb","task_date","remuneration_type","remuneration_number","onTypeChange","e","target","value","preValue","handleChange","event","name","handleClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","catch","err","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport Header1 from './Header1';\r\nimport Header2 from './Header2';\r\nimport Header3 from './Header3';\r\nimport Header4 from './Header4';\r\nimport TaskDescribe from './TaskDescribe';\r\nimport TaskRemuneration from './TaskRemuneration';\r\nimport TaskSetting from './TaskSetting';\r\nimport TaskType from './TaskType';\r\n\r\nfunction Task(){\r\n    const [isPerson, setIsPerson] = useState(true)\r\n    const [task, setTask] = useState({\r\n        task_type: '',\r\n        task_tittle: '',\r\n        task_description: '',\r\n        task_suburb: '',\r\n        task_date: '',\r\n        remuneration_type: '',\r\n        remuneration_number: ''\r\n    })\r\n    const onTypeChange = (e)=>{\r\n      if(e.target.value === \"person\"){\r\n        setIsPerson(true)\r\n        setTask((preValue)=>{\r\n            return{\r\n                ...preValue,\r\n                task_type: \"person\"\r\n            }\r\n        })\r\n      }\r\n      else{\r\n        setIsPerson(false)\r\n        setTask((preValue)=>{\r\n            return{\r\n                ...preValue,\r\n                task_type: \"online\"\r\n            }\r\n        })\r\n      }\r\n    }\r\n    const handleChange = (event)=>{\r\n        const {name, value} = event.target\r\n        setTask((preValue)=>{\r\n            return{\r\n                ...preValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    const handleClick = ()=>{\r\n        fetch('http://localhost:8000/task',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                task_type: task.task_type,\r\n                task_tittle: task.task_tittle,\r\n                task_description: task.task_description,\r\n                task_suburb: task.task_suburb,\r\n                task_date: task.task_date,\r\n                remuneration_type: task.remuneration_type,\r\n                remuneration_number: task.remuneration_number\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console(data))\r\n        .catch(err=>{\r\n            console.log(\"Error: \" + err)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n          <Header1 />\r\n          <TaskType typeChange={onTypeChange}/>\r\n          <Header2 />\r\n          <TaskDescribe onChange={handleChange}/>\r\n          <Header3 />\r\n          <TaskSetting isTypePerson={isPerson} onChange={handleChange}/>\r\n          <Header4 />\r\n          <TaskRemuneration onChange={handleChange}/>\r\n          <Button onClick={handleClick}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task"]},"metadata":{},"sourceType":"module"}